# Generated by Django 4.1.1 on 2023-06-12 08:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("uuid", models.UUIDField(unique=True)),
                ("phone_number", models.CharField(max_length=15)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Restos",
            fields=[
                ("resto_id", models.AutoField(primary_key=True, serialize=False)),
                ("resto_name", models.CharField(max_length=255)),
                ("resto_mobile_number", models.CharField(max_length=255)),
                ("resto_location", models.CharField(max_length=255)),
                ("resto_certifications", models.CharField(max_length=255)),
                ("view_rate", models.IntegerField()),
                ("resto_registered_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Customers",
            fields=[
                (
                    "uid",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("is_membership", models.BooleanField()),
                ("photo_url", models.CharField(max_length=255)),
                ("location", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="RestoOwners",
            fields=[
                (
                    "uid",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("is_membership", models.BooleanField()),
                ("photo_url", models.CharField(max_length=255)),
                ("location", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Ratings",
            fields=[
                ("rating_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("photo_url", models.CharField(max_length=255)),
                ("comment", models.TextField()),
                ("rating", models.IntegerField()),
                ("timestamp", models.IntegerField()),
                (
                    "resto_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="club.restos"
                    ),
                ),
                (
                    "uid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Promotions",
            fields=[
                ("promotion_id", models.AutoField(primary_key=True, serialize=False)),
                ("promotion_price", models.IntegerField()),
                ("promotion_banner", models.BinaryField()),
                (
                    "resto_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="club.restos"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                ("product_id", models.AutoField(primary_key=True, serialize=False)),
                ("product_name", models.CharField(max_length=255)),
                ("product_price", models.IntegerField()),
                ("serves", models.IntegerField()),
                ("product_discount", models.IntegerField()),
                ("product_images", models.CharField(max_length=255)),
                ("veg", models.BooleanField()),
                ("product_category", models.CharField(max_length=255)),
                (
                    "resto_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="club.restos"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Posts",
            fields=[
                ("post_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("body", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "resto_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="club.restos"
                    ),
                ),
                (
                    "uid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Events",
            fields=[
                ("event_id", models.AutoField(primary_key=True, serialize=False)),
                ("booking_person", models.CharField(max_length=255)),
                ("booking_person_num1", models.IntegerField()),
                ("booking_person_num2", models.IntegerField()),
                ("event_category", models.CharField(max_length=255)),
                ("crowd_count", models.IntegerField()),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
                ("booking_date", models.DateTimeField()),
                (
                    "uid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Bookings",
            fields=[
                ("booking_id", models.AutoField(primary_key=True, serialize=False)),
                ("booking_date", models.DateTimeField()),
                (
                    "resto_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="club.restos"
                    ),
                ),
                (
                    "uid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Memberships",
            fields=[
                (
                    "uid",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="club.customers",
                    ),
                ),
                ("membership_type", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expiry_at", models.DateTimeField(null=True)),
            ],
        ),
        migrations.AddField(
            model_name="restos",
            name="uid",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="club.restoowners"
            ),
        ),
    ]
